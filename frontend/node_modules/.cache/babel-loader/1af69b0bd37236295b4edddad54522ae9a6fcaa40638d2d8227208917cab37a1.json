{"ast":null,"code":"var _jsxFileName = \"/Users/gideonhabwe/alx/project/Mechbotc4/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ChatWindow from './components/ChatWindow';\nimport MessageInput from './components/MessageInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSendMessage = async message => {\n    setIsLoading(true);\n    const userMessage = {\n      role: 'user',\n      content: message\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message,\n        chatHistory: chatHistory.map(msg => [msg.role, msg.content])\n      });\n      const botMessage = {\n        role: 'assistant',\n        content: response.data.message\n      };\n      setChatHistory(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while processing your request.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 max-w-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"MechBot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      chatHistory: chatHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: handleSendMessage,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"00jYHOZ+cNpLAvZvJvd0D0ZYAi4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ChatWindow","MessageInput","jsxDEV","_jsxDEV","App","_s","chatHistory","setChatHistory","isLoading","setIsLoading","handleSendMessage","message","userMessage","role","content","prev","response","post","map","msg","botMessage","data","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/gideonhabwe/alx/project/Mechbotc4/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport ChatWindow from './components/ChatWindow';\nimport MessageInput from './components/MessageInput';\n\nfunction App() {\n  const [chatHistory, setChatHistory] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSendMessage = async (message) => {\n    setIsLoading(true);\n    const userMessage = { role: 'user', content: message };\n    setChatHistory((prev) => [...prev, userMessage]);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message,\n        chatHistory: chatHistory.map(msg => [msg.role, msg.content]),\n      });\n\n      const botMessage = { role: 'assistant', content: response.data.message };\n      setChatHistory((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while processing your request.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4 max-w-2xl\">\n      <h1 className=\"text-3xl font-bold mb-4\">MechBot</h1>\n      <ChatWindow chatHistory={chatHistory} />\n      <MessageInput onSendMessage={handleSendMessage} isLoading={isLoading} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,iBAAiB,GAAG,MAAOC,OAAO,IAAK;IAC3CF,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMG,WAAW,GAAG;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEH;IAAQ,CAAC;IACtDJ,cAAc,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,WAAW,CAAC,CAAC;IAEhD,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,gCAAgC,EAAE;QAClEN,OAAO;QACPL,WAAW,EAAEA,WAAW,CAACY,GAAG,CAACC,GAAG,IAAI,CAACA,GAAG,CAACN,IAAI,EAAEM,GAAG,CAACL,OAAO,CAAC;MAC7D,CAAC,CAAC;MAEF,MAAMM,UAAU,GAAG;QAAEP,IAAI,EAAE,WAAW;QAAEC,OAAO,EAAEE,QAAQ,CAACK,IAAI,CAACV;MAAQ,CAAC;MACxEJ,cAAc,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEK,UAAU,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BE,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,SAAS;MACRf,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKsB,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CvB,OAAA;MAAIsB,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpD3B,OAAA,CAACH,UAAU;MAACM,WAAW,EAAEA;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxC3B,OAAA,CAACF,YAAY;MAAC8B,aAAa,EAAErB,iBAAkB;MAACF,SAAS,EAAEA;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV;AAACzB,EAAA,CAhCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}